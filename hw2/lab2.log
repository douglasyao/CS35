Creating sorted list of English words:
sort /usr/share/dict/words > words

Getting HTML of the assignment's web page:
wget http://web.cs.ucla.edu/classes/winter17/cs35L/assign/assign2.html

tr -c 'A-Za-z' '[\n*]' < assign2.html
The output is each word in the html file on its own line. 
Every non-alphabetic character is replaced with a newline.
In this command, -c means to take the complement of any alphabetic character 
and replace with a newline (the * after \n means to expand set 2 to the length
of set1. In other words, every non-alphabetic character is replaced with an
individual \n).

tr -cs 'A-Za-z' '[\n*]' < assign2.html
The output is the same as before, but with a single newline between each word.
The -s option will squeeze repeated characters down to a single instance 
of that character.

tr -cs 'A-Za-z' '[\n*]' < assign2.html | sort
The output will now be sorted by character.

tr -cs 'A-Za-z' '[\n*]' < assign2.html | sort -u
The output now has repeated words collapsed down to single instance of each 
word.

tr -cs 'A-Za-z' '[\n*]' < assign2.html | sort -u | comm - words
The output is three columns with words unique to assign2.html in the first
column, words unique to words in the second column, and words common to both 
in the third column.

tr -cs 'A-Za-z' '[\n*]' < assign2.html | sort -u | comm -23 - words
The output now is only one column and has words unique to assign2.html.


Getting Hawaiian to English: 
wget mauimapp.com/moolelo/hwnwdseng.htm

To obtaining Hawaiian words only, run the following commands with pipes in 
between:

tr -d '\n' < hwnwdseng.htm
Reads in the file and removes all newlines.

tr [:upper:] [:lower:]
Converts all uppercase letters to lowercase.

sed "s/\`/\'/g"
Converts ` symbol to '.

sed -e "s/<\/*u>//g"
Removes all instances of <u> or <\u>

grep -o "<tr> \+<td>[^<]*</td> \+<td>[^<]*</td>"
Matches all instances of <tr> <td>Eword</td> <td>Hword</td>

awk -F '    ' '{print $3}'
Returns only the column containing the Hawaiian words.

sed "s/<\/*td>//g"
Removes <td> and <\td> that wrap around word.

sed "s/,* /\n/g"
Separate words with comma or space in between.

sed '/^$/d'
Remove blank lines.

sort -u
Sort file and remove duplicates.

comm -23 - words
Remove English words.


Writing the shell script:
#!/bin/bash
tr -d '\n' | tr [:upper:] [:lower:] | sed "s/\`/\'/g" | \
sed -e "s/<\/*u>//g" | grep -o "<tr> \+<td>[^<]*</td> \+<td>[^<]*</td>" | \
awk -F '    ' '{print $3}' | sed "s/<\/*td>//g" | sed "s/,* /\n/g" | \
sed '/^$/d' | sort -u | comm -23 - words

Make script executable:
chmod +x buildwords



To run Hawaiian spell checker: 
tr -cs "?\'\-A-Za-z" '[\n*]' | tr [:upper:] [:lower:] | sort -u | comm -23 - 
hwords

Running with input assign2.html results in a long list of English words
Running with input hwords results in nothing.

To count number of words, run wc -l command.
There are 420 misspelled Hawaiian words and 63 misspelled English words.
Yes, any word that is in English or Hawaiian will be misspelled in the
other language. For example, the word "assignment" is misspelled in Hawaiian
but not in English.